{"ast":null,"code":"import _regeneratorRuntime from \"/home/spranga/Dev/tron-war-bot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/spranga/Dev/tron-war-bot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar utils = {\n  tronWeb: false,\n  contract: false,\n  setTronWeb: function setTronWeb(tronWeb) {\n    this.tronWeb = tronWeb;\n  },\n  setContract: function () {\n    var _setContract = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(tronWeb, contractAddress) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return tronWeb.contract().at(contractAddress);\n\n            case 2:\n              this.contract = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function setContract(_x, _x2) {\n      return _setContract.apply(this, arguments);\n    }\n\n    return setContract;\n  }()\n};\nexport default utils;","map":{"version":3,"sources":["/home/spranga/Dev/tron-war-bot/src/utils/tronUtils.js"],"names":["utils","tronWeb","contract","setTronWeb","setContract","contractAddress","at"],"mappings":";;AAAA,IAAMA,KAAK,GAAG;AACZC,EAAAA,OAAO,EAAE,KADG;AAEZC,EAAAA,QAAQ,EAAE,KAFE;AAIZC,EAAAA,UAJY,sBAIDF,OAJC,EAIQ;AAClB,SAAKA,OAAL,GAAeA,OAAf;AACD,GANW;AAQNG,EAAAA,WARM;AAAA;AAAA;AAAA,8CAQMH,OARN,EAQeI,eARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBASYJ,OAAO,CAACC,QAAR,GAAmBI,EAAnB,CAAsBD,eAAtB,CATZ;;AAAA;AASV,mBAAKH,QATK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAd;AAaA,eAAeF,KAAf","sourcesContent":["const utils = {\n  tronWeb: false,\n  contract: false,\n\n  setTronWeb(tronWeb) {\n    this.tronWeb = tronWeb;\n  },\n\n  async setContract(tronWeb, contractAddress) {\n    this.contract = await tronWeb.contract().at(contractAddress);\n  }\n};\n\nexport default utils;"]},"metadata":{},"sourceType":"module"}